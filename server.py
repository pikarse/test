#!/usr/bin/env python3
"""
–í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–∞–∑–¥–∞—á–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

from flask import Flask, send_from_directory, render_template_string
import os
import requests

app = Flask(__name__)

# –ü–æ–ª—É—á–∞–µ–º URL backend –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BACKEND_URL = os.environ.get('BACKEND_URL', 'http://localhost:5000')

# HTML —à–∞–±–ª–æ–Ω –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
MAIN_PAGE_HTML = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ö–∞—Ä—Ç–∞ –†–æ—Å—Å–∏–∏ - –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 40px;
            text-align: center;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.3);
            max-width: 500px;
            width: 90%;
        }

        .logo {
            font-size: 48px;
            margin-bottom: 20px;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
            font-size: 28px;
        }

        .description {
            color: #666;
            margin-bottom: 30px;
            line-height: 1.6;
        }

        .features {
            text-align: left;
            margin-bottom: 30px;
            color: #555;
        }

        .features ul {
            list-style: none;
            padding: 0;
        }

        .features li {
            padding: 8px 0;
            position: relative;
            padding-left: 25px;
        }

        .features li:before {
            content: "‚úÖ";
            position: absolute;
            left: 0;
        }

        .btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 10px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 500;
            text-decoration: none;
            display: inline-block;
            transition: all 0.3s ease;
            margin: 10px;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        .btn-secondary {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        }

        .status {
            margin-top: 20px;
            padding: 15px;
            border-radius: 10px;
            font-size: 14px;
        }

        .status.online {
            background: rgba(40, 167, 69, 0.1);
            color: #28a745;
            border: 1px solid rgba(40, 167, 69, 0.3);
        }

        .status.offline {
            background: rgba(220, 53, 69, 0.1);
            color: #dc3545;
            border: 1px solid rgba(220, 53, 69, 0.3);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">üó∫Ô∏è</div>
        <h1>–ö–∞—Ä—Ç–∞ –†–æ—Å—Å–∏–∏</h1>
        <p class="description">
            –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–æ–∫, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤
        </p>
        
        <div class="features">
            <ul>
                <li>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–æ–∫ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏</li>
                <li>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</li>
                <li>–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</li>
                <li>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –º–µ—Ç–æ–∫/–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤</li>
                <li>–í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –º–µ—Ç–æ–∫ –∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤</li>
            </ul>
        </div>

        <a href="/app" class="btn">üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</a>
        <a href="/api/stats" class="btn btn-secondary" target="_blank">üìä API –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</a>
        
        <div class="status online" id="status">
            ‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
        </div>
    </div>

    <script>
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API
        async function checkAPIStatus() {
            try {
                const response = await fetch('/api/stats');
                if (response.ok) {
                    document.getElementById('status').className = 'status online';
                    document.getElementById('status').textContent = '‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç';
                } else {
                    throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                }
            } catch (error) {
                document.getElementById('status').className = 'status offline';
                document.getElementById('status').textContent = '‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
            }
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        checkAPIStatus();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        setInterval(checkAPIStatus, 30000);
    </script>
</body>
</html>
"""

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    return render_template_string(MAIN_PAGE_HTML)

@app.route('/app')
def app_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return send_from_directory('webapp', 'index.html')

@app.route('/app/<path:filename>')
def app_files(filename):
    """–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return send_from_directory('webapp', filename)

@app.route('/api/<path:path>')
def api_proxy(path):
    """–ü—Ä–æ–∫—Å–∏ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ backend"""
    try:
        response = requests.get(f'{BACKEND_URL}/api/{path}')
        return response.text, response.status_code, response.headers.items()
    except:
        return {'error': 'Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}, 503

@app.route('/health')
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"""
    return {'status': 'ok', 'service': 'russia-map-frontend', 'backend_url': BACKEND_URL}

if __name__ == '__main__':
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º 3000
    port = int(os.environ.get('PORT', 3000))
    
    print(f"üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:{port}")
    print(f"üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:{port}/app")
    print(f"üîß API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: {BACKEND_URL}/api/")
    
    app.run(host='0.0.0.0', port=port, debug=False) 